{% extends 'knp_menu_base.html.twig' %}

{% macro attributes(attributes) %}
{% for name, value in attributes %}
    {%- if value is not none and value is not sameas(false) -%}
        {{- ' %s="%s"'|format(name, value is sameas(true) ? name|e : value|e)|raw -}}
    {%- endif -%}
{%- endfor -%}
{% endmacro %}

{% block compressed_root %}
{% spaceless %}
{{ block('root') }}
{% endspaceless %}
{% endblock %}

{% block root %}
{% set listAttributes = item.childrenAttributes %}
    {{ block('div') -}}
{% endblock %}

{% block div %}
    {% spaceless %}
    {% import _self as knp_menu %}
    <ul class="top-menu-mobile">
        {# <li{% if app.request.attributes.get('route') == 'homepage' %} class="selected"{% endif %}>
            <a href="{{ path('homepage') }}"><i class="iconHome"></i></a>
        </li> #}
    {% for item in item.children %}
        {% set listAttributes = item.childrenAttributes %}
        
        {% set isCurrentItem = false %}
        {% if matcher.isCurrent(item) %}
            {% set isCurrentItem = true %}
        {% endif %}

        {% set hasClass = false %}
        {% if item.linkAttributes is defined and item.linkAttributes is not null and item.linkAttributes|length and item.linkAttributes['class'] is defined and item.linkAttributes['class'] is not null and item.linkAttributes['class']|length %}
            {% set hasClass = true %}
        {% endif %}

        {% set hasChildren = false %}
        {% if item.hasChildren and options.depth is not sameas(0) and item.displayChildren %}
            {% set hasChildren = true %}
        {% endif %}

        {# save current variables #}
        <li class="{% if isCurrentItem %}selected{% endif %}{% if hasClass %} {{item.linkAttributes['class']}}{% endif %}{% if hasChildren %} dropdown{% endif %}">

			<a{% if hasChildren %} class="dropdown-toggle" data-toggle="dropdown"{% endif %} href="{{ item.uri }}" target="{{item.linkAttributes.target}}">{{ item.name }} {% if hasChildren %} <b class="caret"></b>{% endif %}</a>

            {% if hasChildren %}
                {{ block('list') }}
            {% endif %}
        </li>
    {% endfor %}
    </ul>
    {% endspaceless %}
{% endblock %}

{% block list %}
    {% import _self as knp_menu %}
    <ul class="dropdown-menu">
        {{ block('children') }}
    </ul>
{% endblock %}

{% block children %}
{# save current variables #}
{% set currentOptions = options %}
{% set currentItem = item %}
{# update the depth for children #}
{% if options.depth is not none %}
{% set options = options|merge({'depth': currentOptions.depth - 1}) %}
{% endif %}
{# update the matchingDepth for children #}
{% if options.matchingDepth is not none and options.matchingDepth > 0 %}
{% set options = options|merge({'matchingDepth': currentOptions.matchingDepth - 1}) %}
{% endif %}

{% if currentItem.hasChildren %}
    {% for item in currentItem.children %}
        {{ block('item') }}
    {% endfor %}
{% endif %}
{# restore current variables #}
{% set item = currentItem %}
{% set options = currentOptions %}
{% endblock %}

{% block item %}
{% if item.displayed %}
{# building the class of the item #}
    {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
    {%- if matcher.isCurrent(item) %}
        {%- set classes = classes|merge([options.currentClass]) %}
    {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
        {%- set classes = classes|merge([options.ancestorClass]) %}
    {%- endif %}
    {%- if item.actsLikeFirst %}
        {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}
    {%- if item.actsLikeLast %}
        {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}

    {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
    {% if item.hasChildren and options.depth is not sameas(0) %}
        {% if options.branch_class is not empty and item.displayChildren %}
            {%- set classes = classes|merge([options.branch_class]) %}
        {% endif %}
    {% elseif options.leaf_class is not empty %}
        {%- set classes = classes|merge([options.leaf_class]) %}
    {%- endif %}

    {%- set attributes = item.attributes %}
    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}
{# displaying the item #}
    {% import _self as knp_menu %}
    {% set isCurrentItem = false %}
    {% if matcher.isCurrent(item) %}
        {% set isCurrentItem = true %}
    {% endif %}

    {% set hasClass = false %}
    {% if item.linkAttributes is defined and item.linkAttributes is not null and item.linkAttributes|length and item.linkAttributes['class'] is defined and item.linkAttributes['class'] is not null and item.linkAttributes['class']|length %}
        {% set hasClass = true %}
    {% endif %}

    <li{% if isCurrentItem or hasClass %} class="{% if isCurrentItem %}selected{% endif %}{% if hasClass %} {{item.linkAttributes['class']}}{% endif %}"{% endif %}>
        {{ block('linkElement') }}
{# render the list of children#}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
        {# normally here is block('list') #}
        {% if item.hasChildren %}
            <ul class="dropdownSub">
                {{ block('children') }}
            </ul>
        {% endif %}
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import _self as knp_menu %}
    <a href="{{ item.uri }}" target="{{ item.linkAttributes.target }}">
        {{ block('label') }}
    </a>
{% endblock %}

{% block spanElement %}
    {% import _self as knp_menu %}
    <span{{ knp_menu.attributes(item.labelAttributes) }}>
        {{ block('label') }}
    </span>
{% endblock %}

{% block label %}
    {% if options.allow_safe_labels and item.getExtra('safe_label', false) %}
        {{ item.label|raw }}
    {% else %}
        {{ item.label }}
    {% endif %}
{% endblock %}

{% block leafChild %}
    {% for itm in item %}
        <li{% if loop.index % 2 == 0 %} class="{% if left %}noMarRight{% else %}noMarginRight{% endif %}"{% endif %}><a class="subsubNavCatTitle hover" href="{{ itm.uri }}">{{ itm.name }}</a></li>
    {% endfor %}
{% endblock %}
